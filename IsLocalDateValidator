package dashboard_search.domain.validate.Validator;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.ResolverStyle;

import javax.validation.ConstraintValidator;
import javax.validation.ConstraintValidatorContext;

import dashboard_search.domain.validate.annotation.IsLocalDate;

public class IsLocalDateValidator implements ConstraintValidator<IsLocalDate, String>{

    private String message;
    private String pattern;
    @Override
    public void initialize(IsLocalDate constraintAnnotation) {
        this.message = constraintAnnotation.message();
        this.pattern = constraintAnnotation.pattern();
    }
    @Override
    public boolean isValid(String value, ConstraintValidatorContext context) {
        try {
            LocalDate.parse(value, DateTimeFormatter.ofPattern(pattern).withResolverStyle(ResolverStyle.STRICT));
            return true;
        } catch (Exception e) {
//            context.disableDefaultConstraintViolation();
//            context.buildConstraintViolationWithTemplate(message).addPropertyNode(pattern);
            return false;
        }
    }

}
